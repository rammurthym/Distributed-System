/** 
 * @author  Rammurthy Mudimadugula
 * @netid   rxm163730
 * @version 1.0
 * @since   2016-09-22
 *
 * CS6370 - Advanced Operating Systems - Project #1
 */

import java.io.*;
import java.util.*;

/**
 * Token class implements Serializable tokens to be piggybacked on sockets
 * to be sent to nodes in the network path.
 */

public class Token implements Serializable {
    /**
     * Private variables related to Token class.
     * @variable sum          Sum of the labels of nodes traversed so far.
     * @variable path         Remaining path to be taken by the socket.
     * @variable identifier   ID of the node.
     * @variable originalPath Path to be taken by the socket
     */

    private int pid;
    private int clock;
    private String type;

    /**
     * Class method to instantiate the Token class.
     * @param  id           ID of the node.
     * @param  path         Remaining path to be taken by the socket.
     * @param  label        Random number generated by the node.
     * @param  originalPath Path to be taken by the socket
     * @return null Nothing.
     */
    public Token(int id, int clock, String type) {
        this.pid = id;
        this.clock = clock;
        this.type = type;
    }

    /**
     * Get remaining path to be travsered by the socket.
     *
     * @return String path.
     */
    public int getPID() {
        return this.pid;
    }

    /**
     * Get sum of the label values calculated so far.
     *
     * @return int sum.
     */
    public int getClock() {
        return this.clock;
    }

    /**
     * Get sum of the label values calculated so far.
     *
     * @return String status.
     */
    public String getType() {
        return this.type;
    }
}
